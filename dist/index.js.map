{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport * as dotenv from 'dotenv';\r\ndotenv.config();\r\nimport { Client, Message, Snowflake, GuildMember, Interaction } from \"discord.js\";\r\nimport { shuffle } from 'lodash';\r\nimport { Track } from './track';\r\nimport { MusicSubscription } from './subscription';\r\nimport { AudioPlayerStatus, entersState, joinVoiceChannel, AudioResource, VoiceConnectionStatus } from \"@discordjs/voice\";\r\n\r\n\r\nconst { DISCORD_BOT_TOKEN: token, DISCORD_BOT_PREFIX: prefix } = process.env;\r\n\r\nconst client = new Client({ intents: [\"GUILDS\", \"GUILD_MESSAGES\", \"GUILD_VOICE_STATES\"] });\r\nconst queue = new Map();\r\n\r\nclient.once(\"ready\", () => {\r\n    console.log(\"Ready!\");\r\n});\r\n\r\nclient.once(\"reconnecting\", () => {\r\n    console.log(\"Reconnecting!\");\r\n});\r\n\r\nclient.once(\"disconnect\", () => {\r\n    console.log(\"Disconnect!\");\r\n});\r\nclient.on('messageCreate', async (msg: Message) => {\r\n    if (!msg.guild) return\r\n    if (msg.content.toLowerCase() === '!start') {\r\n        await msg.guild.commands.set([\r\n            {\r\n                name: 'play',\r\n                description: 'Plays a song or a playlist',\r\n                options: [\r\n                    {\r\n                        name: 'url',\r\n                        type: 'STRING' as const,\r\n                        description: 'The URL of the song or the playlist to play',\r\n                        required: true,\r\n                    },\r\n                    {\r\n                        name: 'shuffle',\r\n                        type: 'BOOLEAN' as const,\r\n                        description: 'Shuffles the playlist',\r\n                        required: false,\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                name: 'skip',\r\n                description: 'Skip to the next song',\r\n            },\r\n            {\r\n                name: 'queue',\r\n                description: 'Displays the queue',\r\n            },\r\n            {\r\n                name: 'pause',\r\n                description: 'Pauses the song playing',\r\n            },\r\n            {\r\n                name: 'resume',\r\n                description: 'Resumes the current song',\r\n            },\r\n            {\r\n                name: 'stop',\r\n                description: 'Stops the song, empties the queue and leave the channel'\r\n            }\r\n        ]);\r\n        await msg.reply('Deployed.')\r\n    }\r\n});\r\n\r\nconst subscriptions = new Map<Snowflake, MusicSubscription>();\r\n\r\nclient.on('interactionCreate', async (interaction: Interaction) => {\r\n    if (!interaction.isCommand() || !interaction.guildId) return;\r\n    let subscription = subscriptions.get(interaction.guildId);\r\n    switch (interaction.commandName) {\r\n        case 'play':\r\n            await interaction.deferReply();\r\n            const url = interaction.options.get('url')!.value! as string;\r\n            if (!subscription) {\r\n                if (interaction.member instanceof GuildMember && interaction.member.voice.channel) {\r\n                    const channel = interaction.member.voice.channel;\r\n                    subscription = new MusicSubscription(\r\n                        joinVoiceChannel({\r\n                            channelId: channel.id,\r\n                            guildId: channel.guild.id,\r\n                            adapterCreator: channel.guild.voiceAdapterCreator,\r\n                        }),\r\n                    )\r\n                    subscription.voiceConnection.on('error', console.warn);\r\n                    subscriptions.set(interaction.guildId, subscription);\r\n                }\r\n            }\r\n\r\n            if (!subscription) {\r\n                await interaction.followUp('Join a voice channel and try that again');\r\n                return;\r\n            }\r\n\r\n            try {\r\n                await entersState(subscription.voiceConnection, VoiceConnectionStatus.Ready, 20e3);\r\n            } catch (error) {\r\n                console.warn(error);\r\n                await interaction.followUp('Failed to join voice channel, please try again.');\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const track = await Track.from(url, {\r\n                    onStart() {\r\n                        interaction.followUp({ content: 'Now playing', ephemeral: true }).catch(console.warn);\r\n                    },\r\n                    onFinish() {\r\n                        interaction.followUp({ content: 'Now finished', ephemeral: true }).catch(console.warn);\r\n                    },\r\n                    onError(error) {\r\n                        console.warn(error);\r\n                        interaction.followUp({ content: `Error: ${error.message}`, ephemeral: true }).catch(console.warn);\r\n                    }\r\n                });\r\n                if (Array.isArray(track)) {\r\n                    const isShuffled = interaction.options.get('shuffle')?.value! ?? false;\r\n                    if (isShuffled) {\r\n                        const shuffledTracks: Track[] = shuffle(track);\r\n                        shuffledTracks.map(t => {\r\n                            subscription?.enqueue(t)\r\n                        })\r\n                        console.log('subscription', subscription)\r\n                    } else {\r\n                        track.map(t => {\r\n                            subscription?.enqueue(t);\r\n                        })\r\n                    }\r\n                    await interaction.followUp(`Enqueued **${track.length}** titles`)\r\n                } else {\r\n                    subscription.enqueue(track);\r\n                    await interaction.followUp(`Enqueued **${track.title}**`);\r\n                }\r\n            } catch (error) {\r\n                console.warn(error);\r\n                await interaction.reply('Failed to play track, please try again');\r\n            }\r\n            break;\r\n        case 'skip':\r\n            if (subscription) {\r\n                subscription.audioPlayer.stop();\r\n                await interaction.reply('Skipped song');\r\n            } else {\r\n                await interaction.reply('Not playing.');\r\n            };\r\n            break;\r\n        case 'queue':\r\n            if (subscription) {\r\n                const current = subscription.audioPlayer.state.status === AudioPlayerStatus.Idle ? 'Nothing is playing.' : `Playing **${(subscription.audioPlayer.state.resource as AudioResource<Track>).metadata.title}**`;\r\n                const queue = subscription.queue.slice(0, 20).map((track, index) => `${index + 1}) ${track.title}`).join('\\n');\r\n                await interaction.reply(`${current}\\n\\n${queue}`)\r\n            } else {\r\n                await interaction.reply('Not playing.');\r\n            };\r\n            break;\r\n        case 'pause':\r\n            if (subscription) {\r\n                subscription.audioPlayer.pause();\r\n                await interaction.reply({ content: 'Paused.', ephemeral: true });\r\n            } else {\r\n                await interaction.reply('Not playing.');\r\n            };\r\n            break;\r\n        case 'resume':\r\n            if (subscription) {\r\n                subscription.audioPlayer.unpause();\r\n                await interaction.reply({ content: 'Unpaused', ephemeral: true });\r\n            } else {\r\n                await interaction.reply('Not playing.');\r\n            };\r\n            break;\r\n        case 'stop':\r\n            if (subscription) {\r\n                subscription.voiceConnection.destroy();\r\n                subscriptions.delete(interaction.guildId);\r\n                await interaction.reply({ content: 'Left channel.', ephemeral: true });\r\n            } else {\r\n                await interaction.reply('Not playing.');\r\n            };\r\n            break;\r\n        default:\r\n            await interaction.reply('Unknown command.');\r\n            break;\r\n    }\r\n})\r\n\r\nclient.on('error', console.warn);\r\n\r\nvoid client.login(token);"]}