{"version":3,"file":"subscription.js","sourceRoot":"","sources":["../src/subscription.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n\tAudioPlayer,\r\n\tAudioPlayerStatus,\r\n\tAudioResource,\r\n\tcreateAudioPlayer,\r\n\tentersState,\r\n\tVoiceConnection,\r\n\tVoiceConnectionDisconnectReason,\r\n\tVoiceConnectionStatus,\r\n} from '@discordjs/voice';\r\nimport { Track } from './track';\r\nimport { promisify } from 'util';\r\n\r\nconst wait = promisify(setTimeout);\r\n\r\nexport class MusicSubscription {\r\n\tpublic readonly voiceConnection: VoiceConnection;\r\n\tpublic readonly audioPlayer: AudioPlayer;\r\n\tpublic queue: Track[];\r\n\tpublic queueLock = false;\r\n\tpublic readyLock = false;\r\n\r\n\tpublic constructor(voiceConnection: VoiceConnection) {\r\n\t\tthis.voiceConnection = voiceConnection;\r\n\t\tthis.audioPlayer = createAudioPlayer();\r\n\t\tthis.queue = [];\r\n\r\n\t\tthis.voiceConnection.on('stateChange', async (_, newState) => {\r\n\t\t\tif (newState.status === VoiceConnectionStatus.Disconnected) {\r\n\t\t\t\tif (newState.reason === VoiceConnectionDisconnectReason.WebSocketClose && newState.closeCode === 4014) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait entersState(this.voiceConnection, VoiceConnectionStatus.Connecting, 5_000);\r\n\t\t\t\t\t} catch {\r\n\t\t\t\t\t\tthis.voiceConnection.destroy();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this.voiceConnection.rejoinAttempts < 5) {\r\n\t\t\t\t\tawait wait((this.voiceConnection.rejoinAttempts + 1) * 5_000);\r\n\t\t\t\t\tthis.voiceConnection.rejoin();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.voiceConnection.destroy();\r\n\t\t\t\t}\r\n\t\t\t} else if (newState.status === VoiceConnectionStatus.Destroyed) {\r\n\t\t\t\tthis.stop();\r\n\t\t\t} else if (!this.readyLock && (newState.status === VoiceConnectionStatus.Connecting || newState.status === VoiceConnectionStatus.Signalling)) {\r\n\t\t\t\tthis.readyLock = true;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait entersState(this.voiceConnection, VoiceConnectionStatus.Ready, 20_000);\r\n\t\t\t\t} catch {\r\n\t\t\t\t\tif (this.voiceConnection.state.status !== VoiceConnectionStatus.Destroyed) this.voiceConnection.destroy();\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tthis.readyLock = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.audioPlayer.on('stateChange', (oldState, newState) => {\r\n\t\t\tif (newState.status === AudioPlayerStatus.Idle && oldState.status !== AudioPlayerStatus.Idle) {\r\n\t\t\t\tconsole.log('(oldState.resource as AudioResource<Track>)', (oldState.resource as AudioResource<Track>).metadata.title);\r\n\t\t\t\t(oldState.resource as AudioResource<Track>).metadata.onFinish();\r\n\t\t\t\tvoid this.processQueue();\r\n\t\t\t} else if (newState.status === AudioPlayerStatus.Playing) {\r\n\t\t\t\tconsole.log('(newState.resource as AudioResource<Track>)', (newState.resource as AudioResource<Track>).metadata.title);\r\n\t\t\t\t(newState.resource as AudioResource<Track>).metadata.onStart();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.audioPlayer.on('error', error => (error.resource as AudioResource<Track>).metadata.onError(error));\r\n\t\tvoiceConnection.subscribe(this.audioPlayer);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new Track to the queue.\r\n\t * \r\n\t * @param track The Track to add to the queue\r\n\t*/\r\n\tpublic enqueue(track: Track) {\r\n\t\tthis.queue.push(track);\r\n\t\tvoid this.processQueue();\r\n\t}\r\n\r\n\tpublic stop() {\r\n\t\tthis.queueLock = true;\r\n\t\tthis.queue = [];\r\n\t\tthis.audioPlayer.stop(true);\r\n\t}\r\n\r\n\tprivate async processQueue(): Promise<void> {\r\n\t\tif (this.queueLock || this.audioPlayer.state.status !== AudioPlayerStatus.Idle || this.queue.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.queueLock = true;\r\n\t\tconst nextTrack = this.queue.shift()!;\r\n\t\tconsole.log('nextTrack', nextTrack.title, nextTrack.url);\r\n\t\tconsole.log('queue', this.queue);\r\n\t\ttry {\r\n\t\t\tconst resource = await nextTrack.createAudioResource();\r\n\t\t\tthis.audioPlayer.play(resource);\r\n\t\t\tthis.queueLock = false;\r\n\t\t} catch (error) {\r\n\t\t\tnextTrack.onError(error as Error);\r\n\t\t\tthis.queueLock = false;\r\n\t\t\treturn this.processQueue();\r\n\t\t}\r\n\t}\r\n\r\n}"]}